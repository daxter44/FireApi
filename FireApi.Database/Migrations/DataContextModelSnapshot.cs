// <auto-generated />
using System;
using FireApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FireApi.Database.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FireApi.Database.Entity.Address", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Street")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("FireApi.Database.Entity.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AddressID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FirmId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ClientId");

                    b.HasIndex("AddressID");

                    b.HasIndex("FirmId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("FireApi.Database.Entity.Device", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InstalationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Model")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.HasIndex("ClientId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("FireApi.Database.Entity.DeviceStatus", b =>
                {
                    b.Property<Guid>("DeviceStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ActiveMode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("FlowTemperature")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("WaterPreasure")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("WaterTemperature")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Wetness")
                        .HasColumnType("int");

                    b.HasKey("DeviceStatusId");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("DeviceStatus");
                });

            modelBuilder.Entity("FireApi.Database.Entity.Entity.DeviceDoc", b =>
                {
                    b.Property<Guid>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("DeviceID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DocCreationTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("DocumentId");

                    b.ToTable("DeviceDocs");
                });

            modelBuilder.Entity("FireApi.Database.Entity.Firm", b =>
                {
                    b.Property<Guid>("FirmId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AddressID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("FirmId");

                    b.HasIndex("AddressID");

                    b.ToTable("Firms");
                });

            modelBuilder.Entity("FireApi.Database.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("EMail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("Role")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FireApi.Database.Entity.Client", b =>
                {
                    b.HasOne("FireApi.Database.Entity.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");

                    b.HasOne("FireApi.Database.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FireApi.Database.Entity.Firm", null)
                        .WithMany("Clients")
                        .HasForeignKey("FirmId");
                });

            modelBuilder.Entity("FireApi.Database.Entity.Device", b =>
                {
                    b.HasOne("FireApi.Database.Entity.Client", "Client")
                        .WithMany("Devices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FireApi.Database.Entity.DeviceStatus", b =>
                {
                    b.HasOne("FireApi.Database.Entity.Device", "Device")
                        .WithOne("Status")
                        .HasForeignKey("FireApi.Database.Entity.DeviceStatus", "DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FireApi.Database.Entity.Firm", b =>
                {
                    b.HasOne("FireApi.Database.Entity.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");

                    b.HasOne("FireApi.Database.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("FirmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
